{
  "name": "angular-generic",
  "version": "1.0.729",
  "license": "CC-BY-3.0",
  "description": "useful services, filters and directives for every project needs",
  "homepage": "https://torben.website/angularGeneric",
  "documentationWebsite": {
    "name": "angularGeneric",
    "trackingCode": "UA-40192634-16"
  },
  "keywords": [
    "angular",
    "generic",
    "tools"
  ],
  "files": [
    "aheadOfTime.compiled",
    "aheadOfTimeApplicationCompilation.json",
    "aheadOfTimeLibraryCompilation.compiled.json",
    "aheadOfTimePrerenderableModule.ts",
    "animation.js",
    "animation.compiled.js",
    "babelBuildTest.json",
    "index.js",
    "mockup.js",
    "mockup.compiled.js",
    "moduleHelper.js",
    "moduleHelper.compiled.js",
    "preRender.js",
    "preRender.compiled.js",
    "testRunner.js",
    "testRunner.compiled.js"
  ],
  "main": "index.compiled.js",
  "main:aheadOfTimeCompiled": "aheadOfTime.compiled/index.js",
  "types": "aheadOfTime.compiled/index.d.ts",
  "repository": {
    "type": "git",
    "url": "https://github.com/thaibault/angularGeneric"
  },
  "scripts": {
    "build": "yarn build:config && yarn build:aot && yarn build:client && yarn build:pre-renderer && yarn build:test",
    "build:aot": "ngc --project aheadOfTimeLibraryCompilation.json",
    "build:client": "webOptimizer build",
    "build:config": "sed 's/\"genDir\"\\: *\"/\\0..\\/..\\//' aheadOfTimeLibraryCompilation.json | sed 's/\"outDir\"\\: *\"/\\0..\\/..\\//' | sed 's/\"rootDir\"\\: *\"/\\0..\\/..\\//' | sed 's/\"index\\.ts\"/\"..\\/..\\/index.ts\"/' >aheadOfTimeLibraryCompilation.compiled.json",
    "build:export": "yarn build:config && yarn build:aot && webOptimizer build '{__reference__: \"export\"}' && yarn build:pre-renderer && yarn build:test",
    "build:pre-renderer": "webOptimizer build '{__reference__: \"preRenderer\"}'",
    "build:test": "babel --config-file ./babelBuildTest.json --out-file testRunner.compiled.js testRunner.js",
    "build:typescript": "tsc --project aheadOfTimeLibraryCompilation.json",
    "clear": "webOptimizer clear",
    "document": "webOptimizer document",
    "lint": "webOptimizer check:type; webOptimizer lint",
    "prepare": "yarn build",
    "report:coverage": "nyc report --reporter=text-lcov | coveralls",
    "serve": "webOptimizer serve",
    "start": "yarn serve",
    "test": "nyc yarn test:plain",
    "test:browser": "webOptimizer test:browser",
    "test:plain": "webOptimizer test",
    "update": "yarn version --patch && yarn publish",
    "update:documentation": "documentationWebsite --log-level info",
    "watch": "webOptimizer build --watch"
  },
  "dependencies": {
    "blob-util": "*",
    "clientnode": "*",
    "filereader": "*",
    "hammerjs": "*",
    "jsdom": "*",
    "mkdirp": "*",
    "pouchdb": "*",
    "pouchdb-adapter-memory": "*",
    "pouchdb-find": "*",
    "pouchdb-validation": "*",
    "rimraf": "*"
  },
  "peerDependencies": {
    "@angular/animations": "*",
    "@angular/common": "*",
    "@angular/compiler": "*",
    "@angular/core": "*",
    "@angular/forms": "*",
    "@angular/http": "*",
    "@angular/material": "*",
    "@angular/platform-browser": "*",
    "@angular/platform-browser-dynamic": "*",
    "@angular/platform-server": "*",
    "@angular/router": "*",
    "@babel/runtime": "*",
    "codemirror": "*",
    "html-minifier": "*",
    "reflect-metadata": "*",
    "rxjs": "*",
    "tinymce": "*",
    "zone.js": "*"
  },
  "devDependencies": {
    "@angular/animations": "*",
    "@angular/cdk": "*",
    "@angular/common": "*",
    "@angular/compiler": "*",
    "@angular/compiler-cli": "*",
    "@angular/core": "*",
    "@angular/forms": "*",
    "@angular/http": "*",
    "@angular/material": "*",
    "@angular/platform-browser": "*",
    "@angular/platform-browser-dynamic": "*",
    "@angular/platform-server": "*",
    "@angular/router": "*",
    "@babel/cli": "*",
    "@babel/plugin-proposal-decorators": "*",
    "@babel/polyfill": "*",
    "@types/node": "*",
    "babel-eslint": "*",
    "babel-plugin-angular2-annotations": "*",
    "coveralls": "*",
    "documentation-website": "*",
    "eslint": "*",
    "eslint-config-google": "*",
    "eslint-plugin-flowtype": "*",
    "eslint-plugin-jsdoc": "*",
    "flow-bin": "*",
    "html-minifier": "*",
    "jquery": "*",
    "jsdoc": "*",
    "nyc": "*",
    "qunit": "*",
    "reflect-metadata": "*",
    "rxjs": "*",
    "tinymce": "*",
    "typescript": "3.1.x",
    "weboptimizer": "*",
    "webpack": "*",
    "webpack-cli": "*",
    "webpack-dev-server": "*",
    "zone.js": "*"
  },
  "webOptimizer": {
    "export": {
      "module": {
        "preprocessor": {
          "javaScript": {
            "options": {
              "plugins": {
                "__remove__": "@babel/plugin-transform-runtime"
              }
            }
          }
        }
      }
    },
    "files": {
      "compose": {
        "cascadingStyleSheet": null
      }
    },
    "injection": {
      "external": {
        "implicit": {
          "pattern": {
            "exclude": {
              "__append__": {
                "__evaluate__": "/^clientnode\\/test(?:\\.compiled)?(?:\\.js)?$/"
              }
            }
          }
        }
      },
      "internal": {
        "animation": {
          "__evaluate__": "self.givenCommandLineArguments.length && ['test', 'test:browser'].includes(self.givenCommandLineArguments[2]) ? [] : './animation'"
        },
        "index": {
          "__evaluate__": "(self.givenCommandLineArguments.length && ['build', 'export'].includes(self.givenCommandLineArguments[2]) ? [] : ['@babel/polyfill', 'reflect-metadata', 'zone.js']).concat(self.givenCommandLineArguments.length && ['serve', 'test:browser'].includes(self.givenCommandLineArguments[2]) ? `webpack-dev-server/client?http${self.development.server.cert ? 's' : ''}://0.0.0.0:${self.development.server.port}` : []).concat(self.givenCommandLineArguments.length && ['test', 'test:browser'].includes(self.givenCommandLineArguments[2]) ? './test' : './index')"
        },
        "mockup": {
          "__evaluate__": "self.givenCommandLineArguments.length && ['test', 'test:browser'].includes(self.givenCommandLineArguments[2]) ? [] : './mockup'"
        },
        "moduleHelper": {
          "__evaluate__": "self.givenCommandLineArguments.length && ['test', 'test:browser'].includes(self.givenCommandLineArguments[2]) ? [] : './moduleHelper'"
        }
      }
    },
    "module": {
      "aliases": {
        "#": "We need blob-util in node environments only.",
        "blob-util$": {
          "__evaluate__": "self.targetTechnology === 'node' ? 'clientnode' : 'blob-util'"
        },
        "#0": "We want to use the pre-compiled artefact.",
        "clientnode/test$": "clientnode/test.compiled",
        "#1": "Standard import is \"node-fetch/lib/index.mjs\" which has import declarations which aren't allowed for javascript module files.",
        "node-fetch$": "node-fetch/lib/index.js",
        "#2": "Avoid using default buggy \"pouchdb-promise/lib/index.es.js\" version.",
        "pouchdb-promise$": "pouchdb-promise/lib/index.js"
      },
      "optimizer": {
        "babelMinify": {
          "bundle": {
            "transform": {
              "#": "Mangeling here results in undefined variable (for injected service in first defined one: \"InitialDataService\") when using the pre-renderer in application specific ones. Example traceback in application's pre-renderer: ReferenceError: e is not defined   at Module.<anonymous> (/build/preRender.js:124780:25463)   at __webpack_require__ (/build/preRender.js:124780:694)   at Object.<anonymous> (/build/preRender.js:124780:3665)   at __webpack_require__ (/build/preRender.js:124780:694)   at module.exports.wrapperApi (/build/preRender.js:124780:2020)   at Object.<anonymous> (/build/preRender.js:124780:2066)   at Object.<anonymous> (/build/preRender.js:125381:30)   at __webpack_require__ (/build/preRender.js:23:30)   at Module.<anonymous> (/build/preRender.js:155089:26)   at __webpack_require__ (/build/preRender.js:23:30)",
              "mangle": false
            },
            "#": "Mangeling here results in undefined variable (for injected service in first defined one: \"InitialDataService\") when using the pre-renderer in application specific ones. Example traceback in application's pre-renderer: ReferenceError: e is not defined   at Module.<anonymous> (/build/preRender.js:124780:25463)   at __webpack_require__ (/build/preRender.js:124780:694)   at Object.<anonymous> (/build/preRender.js:124780:3665)   at __webpack_require__ (/build/preRender.js:124780:694)   at module.exports.wrapperApi (/build/preRender.js:124780:2020)   at Object.<anonymous> (/build/preRender.js:124780:2066)   at Object.<anonymous> (/build/preRender.js:125381:30)   at __webpack_require__ (/build/preRender.js:23:30)   at Module.<anonymous> (/build/preRender.js:155089:26)   at __webpack_require__ (/build/preRender.js:23:30)",
            "mangle": false
          },
          "#": "This loader expects javascript (not typescript) here.",
          "module": null
        }
      },
      "preprocessor": {
        "javaScript": {
          "options": {
            "plugins": {
              "__prepend__": [
                "angular2-annotations",
                [
                  "@babel/plugin-proposal-decorators",
                  {
                    "legacy": true
                  }
                ],
                [
                  "@babel/plugin-proposal-class-properties",
                  {
                    "loose": true
                  }
                ]
              ],
              "__remove__": [
                "@babel/plugin-proposal-class-properties",
                "@babel/plugin-transform-runtime"
              ]
            }
          }
        }
      },
      "replacements": {
        "context": [
          [
            "/@angular\\/+core\\/+f?esm(?:201)?5/",
            {
              "__evaluate__": "`'${self.path.source.base}'`"
            }
          ]
        ],
        "normal": {
          "#": "Using pre-compiled artefacts.",
          "^@babel/polyfill$": "@babel/polyfill/dist/polyfill.min.js",
          "^blob-util$": "blob-util/dist/blob-util.min.js",
          "^hammerjs$": "hammerjs/hammer.min.js",
          "^jquery$": {
            "__evaluate__": "path.resolve('./node_modules/jquery/dist/jquery.min.js')"
          }
        }
      },
      "skipParseRegularExpressions": {
        "__evaluate__": "/(?:^|\\/)(?:(?:@babel\\/polyfill\\/dist\\/polyfill)|(?:hammerjs\\/hammer)|(?:jquery\\/dist\\/jquery)|(?:pouchdb\\/dist\\/pouchdb))(?:\\.min)?\\.js(?:\\?.+|$)/"
      }
    },
    "preRenderer": {
      "exportFormat": {
        "external": "commonjs2",
        "self": "commonjs2"
      },
      "injection": {
        "internal": {
          "animation": [],
          "index": [],
          "mockup": [],
          "moduleHelper": [],
          "preRender": "./preRender"
        }
      },
      "module": {
        "optimizer": {
          "babelMinify": {
            "bundle": {
              "transform": {
                "#": "To provide a generic logging mechanism we need this feature to be exported.",
                "removeConsole": false
              }
            },
            "module": {
              "#": "Mangeling here results in undefined variable (for injected service in first defined one: \"InitialDataService\") when using the pre-renderer in application specific ones. Example traceback in application's pre-renderer: ReferenceError: e is not defined   at Module.<anonymous> (/build/preRender.js:124780:25463)   at __webpack_require__ (/build/preRender.js:124780:694)   at Object.<anonymous> (/build/preRender.js:124780:3665)   at __webpack_require__ (/build/preRender.js:124780:694)   at module.exports.wrapperApi (/build/preRender.js:124780:2020)   at Object.<anonymous> (/build/preRender.js:124780:2066)   at Object.<anonymous> (/build/preRender.js:125381:30)   at __webpack_require__ (/build/preRender.js:23:30)   at Module.<anonymous> (/build/preRender.js:155089:26)   at __webpack_require__ (/build/preRender.js:23:30)",
              "mangle": false,
              "#0": "To provide a generic logging mechanism we need this feature to be exported.",
              "removeConsole": false
            }
          }
        }
      },
      "targetTechnology": "node"
    }
  }
}
