{
  "name": "angular-generic",
  "version": "1.0.422",
  "license": "CC-BY-3.0",
  "description": "useful services, filters and directives for every project needs",
  "homepage": "http://torben.website/angularGeneric",
  "documentationWebsite": {
    "name": "angularGeneric",
    "trackingCode": "UA-40192634-16"
  },
  "keywords": [
    "angular",
    "generic",
    "tools"
  ],
  "files": [
    "aheadOfTime.compiled",
    "aheadOfTimeApplicationCompilation.json",
    "aheadOfTimeLibraryCompilation.compiled.json",
    "animation.js",
    "animation.compiled.js",
    "index.js",
    "mockup.js",
    "mockup.compiled.js",
    "moduleHelper.js",
    "moduleHelper.compiled.js",
    "preRender.js",
    "preRender.compiled.js",
    "testRunner.js",
    "testRunner.compiled.js"
  ],
  "main": "index.compiled.js",
  "jsnext:main": "aheadOfTime.compiled/index.js",
  "types": "aheadOfTime.compiled/index.d.ts",
  "repository": {
    "type": "git",
    "url": "https://github.com/thaibault/angularGeneric"
  },
  "scripts": {
    "build": "npm run build:config && npm run build:aot && webOptimizer build && npm run build:pre-renderer && npm run build:test",
    "build:aot": "ngc --project aheadOfTimeLibraryCompilation.json",
    "build:config": "sed 's/\"genDir\"\\: *\"/\\0..\\/..\\//' aheadOfTimeLibraryCompilation.json | sed 's/\"outDir\"\\: *\"/\\0..\\/..\\//' | sed 's/\"rootDir\"\\: *\"/\\0..\\/..\\//' | sed 's/\"index\\.ts\"/\"..\\/..\\/index.ts\"/' >aheadOfTimeLibraryCompilation.compiled.json",
    "build:dll": "webOptimizer build:dll",
    "build:pre-renderer": "babel --plugins angular2-annotations,transform-decorators-legacy,transform-flow-strip-types,transform-runtime --presets env,stage-0 --source-maps inline --out-file preRender.compiled.js preRender.js",
    "build:test": "babel --plugins angular2-annotations,transform-decorators-legacy,transform-flow-strip-types --presets env,stage-0 --source-maps inline --out-file testRunner.compiled.js testRunner.js",
    "build:typescript": "tsc --project aheadOfTimeLibraryCompilation.json",
    "clear": "webOptimizer clear",
    "document": "webOptimizer document",
    "export": "npm run build:config && npm run build:aot && webOptimizer build '{development:{tool:false},module:{preprocessor:{javaScript:{options:{plugins:{__remove__:\"transform-runtime\"}}}}}}' && npm run build:pre-renderer && npm run build:test",
    "lint": "webOptimizer check:type; webOptimizer lint",
    "prepare": "npm run build",
    "serve": "webOptimizer serve",
    "start": "npm run serve",
    "test": "webOptimizer test",
    "test:browser": "webOptimizer test:browser",
    "update": "npm version patch && npm publish",
    "update:documentation": "documentationWebsite --log-level info",
    "watch": "webOptimizer build --watch",
    "watch:dll": "webOptimizer build:dll --watch"
  },
  "dependencies": {
    "blob-util": "^1.3.0",
    "clientnode": "^1.0.282",
    "filereader": "^0.10.3",
    "hammerjs": "^2.0.8",
    "jsdom": "^11.4.0",
    "mkdirp": "^0.5.1",
    "pouchdb": "^6.3.4",
    "pouchdb-adapter-memory": "^6.3.4",
    "pouchdb-find": "^6.3.4",
    "pouchdb-validation": "^1.2.1",
    "rimraf": "^2.6.1"
  },
  "peerDependencies": {
    "@angular/animations": "*",
    "@angular/common": "*",
    "@angular/compiler": "*",
    "@angular/core": "*",
    "@angular/forms": "*",
    "@angular/http": "*",
    "@angular/material": "*",
    "@angular/platform-browser": "*",
    "@angular/platform-browser-dynamic": "*",
    "@angular/platform-server": "*",
    "@angular/router": "*",
    "babel-runtime": "*",
    "codemirror": "*",
    "reflect-metadata": "*",
    "rxjs": "*",
    "tinymce": "*",
    "zone.js": "*"
  },
  "devDependencies": {
    "@angular/animations": "^5.0.2",
    "@angular/cdk": "^5.0.0-rc0",
    "@angular/common": "^5.0.2",
    "@angular/compiler": "^5.0.2",
    "@angular/compiler-cli": "^5.0.2",
    "@angular/core": "^5.0.2",
    "@angular/forms": "^5.0.2",
    "@angular/http": "^5.0.2",
    "@angular/material": "^5.0.0-rc0",
    "@angular/platform-browser": "^5.0.2",
    "@angular/platform-browser-dynamic": "^5.0.2",
    "@angular/platform-server": "^5.0.2",
    "@angular/router": "^5.0.2",
    "babel-cli": "^6.26.0",
    "babel-eslint": "^8.0.2",
    "babel-plugin-angular2-annotations": "^5.1.0",
    "babel-plugin-transform-decorators-legacy": "^1.3.4",
    "babel-polyfill": "^6.26.0",
    "documentation-website": "^1.0.76",
    "eslint": "^4.11.0",
    "eslint-config-google": "^0.9.1",
    "eslint-plugin-flowtype": "^2.36.0",
    "eslint-plugin-jsdoc": "^3.2.0",
    "flow-bin": "^0.59.0",
    "jsdoc": "^3.5.4",
    "qunit": "^2.4.1",
    "reflect-metadata": "^0.1.10",
    "rxjs": "^5.5.2",
    "source-map-support": "^0.5.0",
    "tinymce": "^4.7.2",
    "typescript": "2.4.2",
    "weboptimizer": "^1.0.417",
    "webpack": "^3.8.1",
    "webpack-dev-server": "^2.9.3",
    "zone.js": "^0.8.18"
  },
  "webOptimizer": {
    "injection": {
      "external": {
        "implicit": {
          "pattern": {
            "exclude": {
              "__append__": {
                "__evaluate__": "/^clientnode\\/test(?:\\.compiled)?(?:\\.js)?$/"
              }
            }
          }
        }
      },
      "internal": {
        "animation": {
          "__evaluate__": "self.givenCommandLineArguments.length && ['test', 'test:browser'].includes(self.givenCommandLineArguments[2]) ? [] : './animation'"
        },
        "index": {
          "__evaluate__": "(self.givenCommandLineArguments.length && ['build', 'export'].includes(self.givenCommandLineArguments[2]) ? [] : ['babel-polyfill', 'reflect-metadata', 'zone.js']).concat(self.givenCommandLineArguments.length && ['build:dll', 'serve', 'test:browser', 'watch:dll'].includes(self.givenCommandLineArguments[2]) ? `webpack-dev-server/client?http${self.development.server.cert ? 's' : ''}://0.0.0.0:${self.development.server.port}` : []).concat(self.givenCommandLineArguments.length && ['test', 'test:browser'].includes(self.givenCommandLineArguments[2]) ? './test' : './index')"
        },
        "mockup": {
          "__evaluate__": "self.givenCommandLineArguments.length && ['test', 'test:browser'].includes(self.givenCommandLineArguments[2]) ? [] : './mockup'"
        },
        "moduleHelper": {
          "__evaluate__": "self.givenCommandLineArguments.length && ['test', 'test:browser'].includes(self.givenCommandLineArguments[2]) ? [] : './moduleHelper'"
        },
        "vendor": {
          "__evaluate__": "self.debug && 2 < self.givenCommandLineArguments.length && ['build:dll', 'serve', 'test:browser', 'watch:dll'].includes(self.givenCommandLineArguments[2]) ? ['babel-polyfill', 'blob-util', 'clientnode', 'hammerjs', 'pouchdb', 'pouchdb-adapter-memory', 'pouchdb-find', 'pouchdb-validation', 'reflect-metadata', 'zone.js', 'rxjs', '@angular/animations', '@angular/common', '@angular/core', '@angular/http', '@angular/material', '@angular/platform-browser', '@angular/platform-browser-dynamic', '@angular/router'].concat(self.givenCommandLineArguments[2] === 'serve' ? [] : ['script!qunit', 'weboptimizer/browserAPI', './mockup']) : []"
        }
      }
    },
    "module": {
      "aliases": {
        "clientnode/test$": "clientnode/test.compiled"
      },
      "preprocessor": {
        "javaScript": {
          "options": {
            "plugins": {
              "__prepend__": [
                "angular2-annotations",
                "transform-decorators-legacy"
              ],
              "__remove__": "transform-runtime"
            },
            "presets": {
              "__evaluate__": "[['env', {targets: self.targetTechnology === 'node' ? {node: 'current'} : {browsers: 'last 2 versions', node: 'current'}}]].concat('stage-0')"
            }
          }
        }
      },
      "replacements": {
        "context": [
          [
            "/angular(\\\\|\\/)core(\\\\|\\/)(esm(\\\\|\\/)src|src)(\\\\|\\/)linker/",
            "__dirname"
          ]
        ],
        "normal": {
          "^babel-polyfill$": "babel-polyfill/dist/polyfill.min.js",
          "^blob-util$": "blob-util/dist/blob-util.min.js",
          "^hammerjs$": "hammerjs/hammer.min.js",
          "^jquery$": "jquery/dist/jquery.min.js",
          "^pouchdb(?:/.+)?$": "pouchdb/dist/pouchdb.min.js",
          "^DOESNT WORK: rxjs(?:/.+)?$": "rxjs/bundles/Rx.min.js",
          "^DOESNT WORK IN NODE: zone\\.js(?:/.+)?$": "zone.js/dist/zone.min.js"
        }
      },
      "skipParseRegularExpressions": {
        "__evaluate__": "/(?:^|\\/)(?:(?:babel-polyfill\\/dist\\/polyfill)|(?:hammerjs\\/hammer)|(?:jquery\\/dist\\/jquery)|(?:pouchdb\\/dist\\/pouchdb)|(?:reflect-metadata\\/Reflect)|(?:rxjs\\/bundles\\/Rx)|(?:webpack\\/buildin\\/global)|(?:webpack\\/buildin\\/module)|(?:zone\\.js\\/dist\\/zone))(?:\\.min)?\\.js(?:\\?.+|$)/"
      }
    }
  }
}
